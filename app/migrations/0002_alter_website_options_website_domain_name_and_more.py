# Generated by Django 5.2.6 on 2025-09-13 03:04

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='website',
            options={'ordering': ['-created_at']},
        ),
        migrations.AddField(
            model_name='website',
            name='domain_name',
            field=models.CharField(blank=True, max_length=200, null=True),
        ),
        migrations.AddField(
            model_name='website',
            name='is_active',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='website',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='website',
            name='custom_domain',
            field=models.CharField(blank=True, max_length=200, null=True),
        ),
        migrations.AlterField(
            model_name='website',
            name='folder_name',
            field=models.CharField(blank=True, max_length=500, null=True),
        ),
        migrations.AlterField(
            model_name='website',
            name='title',
            field=models.CharField(max_length=200),
        ),
        migrations.AlterField(
            model_name='website',
            name='uploaded_file',
            field=models.FileField(upload_to='website_uploads/'),
        ),
        migrations.CreateModel(
            name='DjangoProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(help_text='Name of your Django project', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Brief description of your project')),
                ('project_file', models.FileField(help_text='Upload your Django project as a ZIP file', upload_to='django_projects/')),
                ('python_version', models.CharField(choices=[('3.8', 'Python 3.8'), ('3.9', 'Python 3.9'), ('3.10', 'Python 3.10'), ('3.11', 'Python 3.11'), ('3.12', 'Python 3.12')], default='3.9', help_text='Python version to use', max_length=5)),
                ('subdomain', models.CharField(max_length=100, unique=True)),
                ('custom_domain', models.CharField(blank=True, help_text='Optional: Use your own domain (e.g., myapp.com)', max_length=200, null=True)),
                ('domain_name', models.CharField(blank=True, max_length=200, null=True)),
                ('project_folder', models.CharField(blank=True, max_length=500, null=True)),
                ('deployment_status', models.CharField(choices=[('pending', 'Pending'), ('building', 'Building'), ('deployed', 'Deployed'), ('failed', 'Failed'), ('stopped', 'Stopped')], default='pending', max_length=20)),
                ('is_active', models.BooleanField(default=False)),
                ('database_url', models.CharField(blank=True, max_length=500, null=True)),
                ('memory_limit', models.CharField(default='512m', help_text='Memory limit (e.g., 512m, 1g)', max_length=10)),
                ('environment_vars', models.JSONField(blank=True, default=dict, help_text='Additional environment variables')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_deployed', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Django Project',
                'verbose_name_plural': 'Django Projects',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DeploymentLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_type', models.CharField(choices=[('info', 'Info'), ('warning', 'Warning'), ('error', 'Error'), ('success', 'Success')], max_length=10)),
                ('message', models.TextField()),
                ('details', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('website', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.website')),
                ('django_project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.djangoproject')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DatabaseBackup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('backup_file', models.FileField(upload_to='backups/')),
                ('backup_size', models.FloatField(help_text='Size in MB')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_automatic', models.BooleanField(default=True)),
                ('django_project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.djangoproject')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServerResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpu_usage', models.FloatField(default=0.0)),
                ('memory_usage', models.FloatField(default=0.0)),
                ('disk_usage', models.FloatField(default=0.0)),
                ('bandwidth_usage', models.FloatField(default=0.0)),
                ('memory_limit', models.FloatField(default=512.0)),
                ('disk_limit', models.FloatField(default=1024.0)),
                ('bandwidth_limit', models.FloatField(default=10240.0)),
                ('active_websites', models.IntegerField(default=0)),
                ('active_django_projects', models.IntegerField(default=0)),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-recorded_at'],
            },
        ),
        migrations.CreateModel(
            name='SSLCertificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(max_length=200)),
                ('issued_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('cert_file_path', models.CharField(blank=True, max_length=500)),
                ('key_file_path', models.CharField(blank=True, max_length=500)),
                ('auto_renew', models.BooleanField(default=True)),
                ('last_renewal_attempt', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('django_project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.djangoproject')),
                ('website', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.website')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
